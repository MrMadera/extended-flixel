name: CI

on:
    push:
    pull_request:
    workflow_dispatch:

    schedule:
     - cron: "*/10 * * * *"

jobs:
    windows:
        runs-on: windows-latest

        steps:
          - uses: actions/checkout@v4

          - name: Setup Haxe
            uses: krdlab/setup-haxe@master
            with:
              haxe-version: 4.3.6

          - name: Setup Haxelib Directory
            run: |
              haxelib setup C:/haxelib
            shell: cmd

          - name: Install Haxelib Dependencies
            run: |
              haxelib install hxcpp --quiet
              haxe -cp ./setup -D analyzer-optimize -main Main --interp
              haxelib list
            shell: cmd

          - name: Create Version Tag
            run: echo "${{ github.run_id }}" > VERSION

          - name: Compile
            run: cmd /c "cd tests & haxelib run lime build windows --app-version="4.0.0-${{ github.run_id }}"
            shell: cmd

          - name: Upload artifact
            uses: actions/upload-artifact@v4
            with:
              path: tests/export/windows/bin
              name: windowsBuild
              retention-days: 1
    mac:
        runs-on: macos-latest

        steps:
          - uses: actions/checkout@v4

          - name: Setup Haxe
            uses: krdlab/setup-haxe@master
            with:
              haxe-version: 4.3.6

          - name: Setup Haxelib Directory
            run: |
              haxelib setup ~/haxelib
            shell: bash

          - name: Install Haxelib Dependencies
            run: |
              haxelib install hxcpp --quiet
              haxe -cp ./setup -D analyzer-optimize -main Main --interp
              haxelib list
            shell: bash

          - name: Create Version Tag
            run: echo "${{ github.run_id }}" > VERSION

          - name: Compile
            run: |
              cd tests 
              haxelib run lime build mac -cpp --app-version="4.0.0-${{ github.run_id }}"
            shell: bash

          - name: Upload artifact
            uses: actions/upload-artifact@v4
            with:
              path: tests/export/macos/bin
              name: macBuild
              retention-days: 1

    linux:

      runs-on: ubuntu-latest

      steps:

        - uses: actions/checkout@v4

        - name: Setup Haxe
          uses: krdlab/setup-haxe@master
          with:
            haxe-version: 4.3.6

        - name: Setup Haxelib Directory
          run: |
            haxelib setup ~/haxelib
          shell: bash

        - name: Install Haxelib Dependencies
          run: |
            sudo apt-get install libvlc-dev
            sudo apt-get install libvlccore-dev
            haxelib install hxcpp --quiet
            haxe -cp ./setup -D analyzer-optimize -main Main --interp
            haxelib list
          shell: bash

        - name: Create Version Tag
          run: echo "${{ github.run_id }}" > VERSION

        - name: Compile
          run: |
            cd tests 
            haxelib run lime build linux -cpp --app-version="4.0.0-${{ github.run_id }}"
          shell: bash

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            path: tests/export/linux/bin
            name: linuxBuild
            retention-days: 1

    send_email_on_finish:
      needs: [windows, mac, linux]
      runs-on: ubuntu-latest

      steps:
        - name: Notify via Gmail
          uses: dawidd6/action-send-mail@v3
          with:
            server_address: smtp.gmail.com
            server_port: 587
            username: ${{ secrets.EMAIL_ADDRESS }}
            password: ${{ secrets.EMAIL_PASSWORD }}
            subject: Build Completed Successfully
            body: |
              Hi there,

              The build for your project has completed successfully!

              Cheers,
              GitHub Actions
            to: ${{ secrets.MY_EMAIL }}
            from: ${{ secrets.EMAIL_ADDRESS }}

    cancel_previous_workflows:
        runs-on: ubuntu-latest
        permissions: 
          actions: write
        
        steps:
          - name: Cancel previous workflows
            uses: styfle/cancel-workflow-action@0.9.1
            with:
              access_token: ${{ github.token }}
